#include <iostream>
#include <vector>
using namespace std;

void add(vector< vector<int>> &A, vector< vector<int>> &B, vector< vector<int>> &C, int n)
{
    for(int i=0; i<n; i++)
    {
        for(int j=0; j<n; j++)
        {
            C[i][j]=A[i][j]+B[i][j];
        }
    }
}

void sub(vector< vector<int>> &A, vector< vector<int>> &B, vector< vector<int>> &C, int n)
{
    for(int i=0; i<n; i++)
    {
        for(int j=0; j<n; j++)
        {
            C[i][j]=A[i][j]-B[i][j];
        }
    }
}

void matrixMultiply(vector< vector<int>> &A, vector< vector<int>> &B, vector< vector<int>> &C, int n)
{
    if(n==1)
    {
        C[0][0]=A[0][0]*B[0][0];
        return;
    }
    else
    {
        n/=2;
        vector<int> row(n,0);
        
        vector< vector<int>>  A11(n, row),A12(n, row),A21(n, row),A22(n, row),
                            B11(n, row),B12(n, row),B21(n, row),B22(n, row),
                            C11(n, row),C12(n, row),C21(n, row),C22(n, row),
                            s1(n, row),
                            s2(n, row),
                            s3(n, row),
                            s4(n, row),
                            s5(n, row),
                            s6(n, row),
                            s7(n, row),
                            s8(n, row),
                            s9(n, row),
                            s10(n, row),
                            p1(n, row),
                            p2(n, row),
                            p3(n, row),
                            p4(n, row),
                            p5(n, row),
                            p6(n, row),
                            p7(n, row),
                            tempA(n, row),
                            tempB(n, row);
                            
        for(int i=0; i<n; i++)
        {
            for(int j=0; j<n; j++)
            {
                A11[i][j]=A[i][j];
                A12[i][j]=A[i][n+j];
                A21[i][j]=A[n+i][j];
                A22[i][j]=A[n+i][n+j];
                
                B11[i][j]=B[i][j];
                B12[i][j]=B[i][n+j];
                B21[i][j]=B[n+i][j];
                B22[i][j]=B[n+i][n+j];
            }
        }
        
        matrixMultiply(A11,B11,tempA,n);
        matrixMultiply(A12,B21,tempB,n);
        add(tempA,tempB,C11,n);
        
        matrixMultiply(A11,B12,tempA,n);
        matrixMultiply(A12,B22,tempB,n);
        add(tempA,tempB,C12,n);
        
        matrixMultiply(A21,B11,tempA,n);
        matrixMultiply(A22,B21,tempB,n);
        add(tempA,tempB,C21,n);
        
        matrixMultiply(A21,B12,tempA,n);
        matrixMultiply(A22,B22,tempB,n);
        add(tempA,tempB,C22,n);
        
        for(int i=0; i<n; i++)
        {
            for(int j=0; j<n; j++)
            {
                C[i][j]=C11[i][j];
                C[i][n+j]=C12[i][j];
                C[n+i][j]=C21[i][j];
                C[n+i][n+j]=C22[i][j];
            }
        }
    }
}



int main() {
    int n;
    cin>>n;
    vector< vector<int>> A(n, vector<int> (n,0)), B(n, vector<int> (n,0)), C(n, vector<int> (n,0));
    for(int i=0; i<n; i++)
    {
        for(int j=0; j<n; j++)
        {
            cin>>A[i][j];
        }
    }
    for(int i=0; i<n; i++)
    {
        for(int j=0; j<n; j++)
        {
            cin>>B[i][j];
        }
    }
    matrixMultiply(A,B,C,n);
    for(int i=0; i<n; i++)
    {
        for(int j=0; j<n; j++)
        {
            cout<<C[i][j]<<' ';
        }
        cout<<'\n';
    }
    return 0;
}